---SOSL------------
	List<List<SObject>> searchList = [FIND 'SFDC' IN ALL FIELDS 
                                      RETURNING Account(Name), Contact(FirstName,LastName)];
									  
	FIND {Wingo} IN ALL FIELDS RETURNING Account(Name), Contact(FirstName,LastName,Department);
	
	returns accounts and contacts 
	
	search query is always in {}
	
	>>SYNTAX
	
	FIND 'SearchQuery' [IN SearchGroup] [RETURNING ObjectsAndFields]
	
	SearchQuery is the text to search for (a single word or a phrase). Search terms can be grouped with logical operators (AND, OR) and parentheses. Also, search terms can include wildcard characters (*, ?). The * wildcard matches zero or more characters at the middle or end of the search term. The ? wildcard matches only one character at the middle or end of the search term.
	
	SearchGroup is optional. It is the scope of the fields to search. If not specified, the default search scope is all fields. SearchGroup can take one of the following values.

	ALL FIELDS
	NAME FIELDS
	EMAIL FIELDS
	PHONE FIELDS
	SIDEBAR FIELDS
	
	The Query:	This search returns all records whose fields contain both words: The and Query, in any location of the text. The order of words in the search term doesnâ€™t matter.	Account: The SFDC Query Man (Name field matched)
	
	Wingo OR Man:	This search uses the OR logical operator. It returns records with fields containing the word Wingo or records with fields containing the word Man.	Contact: Carol Ruiz, Department: 'Wingo'
	Account: The SFDC Query Man (Name field matched)

	1212:	This search returns all records whose fields contain the word 1212. Phone fields that end with -1212 are matched because 1212 is considered a word when delimited by the dash.	Account: The SFDC Query Man, Phone: '(415)555-1212'
	Contact: Carol Ruiz, Phone: '(415)555-1212'

	wing*:	This is a wildcard search. This search returns all records that have a field value starting with wing.	Contact: Maria Ruiz, Department: 'Wingo'
	Account: The SFDC Query Man, Description: 'Expert in wing technologies.'
	
	List<List<sObject>> searchList = [FIND 'Wingo OR SFDC' IN ALL FIELDS 
					   RETURNING Account(Name),Contact(FirstName,LastName,Department)];
	Account[] searchAccounts = (Account[])searchList[0];
	Contact[] searchContacts = (Contact[])searchList[1];
	System.debug('Found the following accounts.');
	for (Account a : searchAccounts) {
		System.debug(a.Name);
	}
	System.debug('Found the following contacts.');
	for (Contact c : searchContacts) {
		System.debug(c.LastName + ', ' + c.FirstName);
	}
	
	
	You can filter, reorder, and limit the returned results of a SOSL query. Because SOSL queries can return multiple sObjects, those filters are applied within each sObject inside the RETURNING clause.

	You can filter SOSL results by adding conditions in the WHERE clause for an object. For example, this results in only accounts whose industry is Apparel to be returned: RETURNING Account(Name, Industry WHERE Industry='Apparel')

	Likewise, ordering results for one sObject is supported by adding ORDER BY for an object. For example this causes the returned accounts to be ordered by the Name field: RETURNING Account(Name, Industry ORDER BY Name).

	The number of returned records can be limited to a subset of records. This example limits the returned accounts to 10 only: RETURNING Account(Name, Industry LIMIT 10)
	
	
	
public class ContactAndLeadSearch {
    
    public static List<List<sObject>> searchContactsAndLeads(String queryString){
        List<List<sObject>> searchResults = [FIND :queryString IN NAME FIELDS RETURNING Contact, Lead];
        return searchResults;
    }

}